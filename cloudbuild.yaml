options:
  logging: CLOUD_LOGGING_ONLY


  
# steps:
# # Steps to pull a docker image for pgadmin, push it to container registry and deploy it to cloud run.
# - name: "gcr.io/cloud-builders/docker"
#   args: ['pull', 'dpage/pgadmin4']
# - name: "gcr.io/cloud-builders/docker"
#   args: ['tag', 'dpage/pgadmin4','gcr.io/thematic-scope-442522-n4/pgadmin']
# - name: "gcr.io/cloud-builders/docker"
#   args: ['push', 'gcr.io/thematic-scope-442522-n4/pgadmin']
  
# - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
#   entrypoint: gcloud
#   args: ['run', 'deploy','pg-admin', '--image','gcr.io/thematic-scope-442522-n4/pgadmin', '--region','us-central1', '--add-cloudsql-instances', 'ADD_YOUR_GCP_PROJECT_ID_HERE:us-central1:mypostgres','--platform','managed', '--port','80', '--allow-unauthenticated','--set-env-vars','PGADMIN_DEFAULT_EMAIL=user@gmail.com','--set-env-vars','PGADMIN_DEFAULT_PASSWORD=SuperSecret']
  
# # Steps to build a docker image for go-microservice, push it to container registry and deploy it to cloud run.  
# - name: "gcr.io/cloud-builders/docker"
#   args: ['build', '-t', 'gcr.io/thematic-scope-442522-n4/go-microservice','.']
# - name: "gcr.io/cloud-builders/docker"
#   args: ['push', 'gcr.io/thematic-scope-442522-n4/go-microservice']
  
# - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
#   entrypoint: gcloud
#   args: ['run', 'deploy','go-microservice', '--image','gcr.io/thematic-scope-442522-n4/go-microservice', '--region','us-central1', '--add-cloudsql-instances', 'ADD_YOUR_GCP_PROJECT_ID_HERE:us-central1:mypostgres','--platform','managed', '--port','8080', '--allow-unauthenticated']
# images:
# - gcr.io/thematic-scope-442522-n4/go-microservice
# - gcr.io/thematic-scope-442522-n4/pgadmin



steps:
# Steps to pull a docker image for pgadmin, push it to container registry and deploy it to cloud run.
- name: "gcr.io/cloud-builders/docker"
  args: ['pull', 'dpage/pgadmin4']
- name: "gcr.io/cloud-builders/docker"
  args: ['tag', 'dpage/pgadmin4','us-docker.pkg.dev/thematic-scope-442522-n4/gcr-repo/pgadmin']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'us-docker.pkg.dev/thematic-scope-442522-n4/gcr-repo/pgadmin']

- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','pg-admin', '--image','us-docker.pkg.dev/thematic-scope-442522-n4/gcr-repo/pgadmin', '--region','us-central1', '--add-cloudsql-instances', 'ADD_YOUR_GCP_PROJECT_ID_HERE:us-central1:mypostgres','--platform','managed', '--port','80', '--allow-unauthenticated','--set-env-vars','PGADMIN_DEFAULT_EMAIL=user@gmail.com','--set-env-vars','PGADMIN_DEFAULT_PASSWORD=SuperSecret']

# Steps to build a docker image for go-microservice, push it to container registry and deploy it to cloud run.
- name: "gcr.io/cloud-builders/docker"
  args: ['build', '-t', 'us-docker.pkg.dev/thematic-scope-442522-n4/gcr-repo/go-microservice','.']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'us-docker.pkg.dev/thematic-scope-442522-n4/gcr-repo/go-microservice']

- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','go-microservice', '--image','us-docker.pkg.dev/thematic-scope-442522-n4/gcr-repo/go-microservice', '--region','us-central1', '--add-cloudsql-instances', 'ADD_YOUR_GCP_PROJECT_ID_HERE:us-central1:mypostgres','--platform','managed', '--port','8080', '--allow-unauthenticated']

images:
- us-docker.pkg.dev/thematic-scope-442522-n4/gcr-repo/go-microservice
- us-docker.pkg.dev/thematic-scope-442522-n4/gcr-repo/pgadmin
